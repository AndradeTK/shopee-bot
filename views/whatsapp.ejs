<%- include('partials/header', { title: 'Conexão WhatsApp' }) %>

<div class="card">
    <div class="card-header">
        <i class="fa-brands fa-whatsapp"></i> Status da Conexão
    </div>
    <div class="card-body text-center">
        <h4>Status Atual: 
            <%
                let badgeClass = 'bg-secondary';
                if (initialStatus === 'Conectado') badgeClass = 'bg-success';
                if (initialStatus === 'Desconectado') badgeClass = 'bg-danger';
            %>
            <span id="status-badge" class="badge <%= badgeClass %>"><%= initialStatus %></span>
        </h4>
        
        <div id="qr-container" class="mt-4 d-flex justify-content-center">
            <div id="qrcode"></div>
        </div>
        <p id="qr-message" class="mt-3 text-muted">Aguardando geração do QR Code...</p>
        <button id="logout-btn" class="btn btn-danger mt-4" style="<%= initialStatus === 'Conectado' ? 'display: inline-block;' : 'display: none;' %>">
            <i class="fa-solid fa-power-off"></i> Encerrar Conexão e Gerar Novo QR Code
        </button>
    </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>
<script>
    const socket = io();
    const statusBadge = document.getElementById('status-badge');
    const qrContainer = document.getElementById('qrcode');
    const qrMessage = document.getElementById('qr-message');
    const logoutBtn = document.getElementById('logout-btn');

    // Inicializa o objeto QRCode uma vez.
    const qrcode = new QRCode(qrContainer, {
        width: 256,
        height: 256,
        colorDark: "#000000",
        colorLight: "#ffffff",
        correctLevel: QRCode.CorrectLevel.H
    });

    // Listener para o status da conexão
    socket.on('status', (status) => {
        statusBadge.textContent = status;
        if (status === 'Conectado') {
            statusBadge.className = 'badge bg-success';
            logoutBtn.style.display = 'inline-block';
            qrContainer.style.display = 'none';
            qrMessage.textContent = 'A conexão já está ativa!';
        } else {
            logoutBtn.style.display = 'none';
            if (status === 'Desconectado' || status.includes('Erro')) {
                statusBadge.className = 'badge bg-danger';
            } else {
                statusBadge.className = 'badge bg-warning text-dark';
            }
        }
    });

    // Listener para o QR Code
    socket.on('qr', (qr) => {
        if (qr) {
            qrContainer.style.display = 'block';
            qrMessage.textContent = 'Por favor, escaneie o QR Code abaixo com seu WhatsApp.';
            qrcode.makeCode(qr);
        } else {
            qrcode.clear();
            qrContainer.style.display = 'none';
            qrMessage.textContent = 'A conexão já está ativa!';
        }
    });

    // Listener para o clique no botão de logout
    logoutBtn.addEventListener('click', () => {
        if (confirm('Você tem certeza que deseja encerrar a conexão? Isso irá apagar a sessão atual e um novo QR Code será gerado.')) {
            statusBadge.textContent = 'Desconectando...';
            statusBadge.className = 'badge bg-secondary';
            logoutBtn.style.display = 'none';
            qrcode.clear();
            qrMessage.textContent = 'Gerando novo QR Code...';
            
            fetch('/admin/whatsapp/logout', { method: 'POST' });
        }
    });
</script>

<%- include('partials/footer') %>
